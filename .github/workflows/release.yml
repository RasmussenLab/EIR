name: Build

on:
  push:
    tags:
      - '*.*.*'

jobs:

  createrelease:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: true
      - name: Output Release URL File
        run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
      - name: Save Release URL File for publish
        uses: actions/upload-artifact@v1
        with:
          name: release_url
          path: release_url.txt

  build:
    name: Build packages
    needs: createrelease
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:

          - os: ubuntu-latest
            TARGET: linux
            CMD_BUILD: |
              poetry run pyinstaller --onefile config/build.spec
              zip -j ./dist/eir_linux.zip ./dist/eir
            OUT_FILE_NAME: eir_linux.zip
            ASSET_MIME: application/zip

          - os: macos-latest
            TARGET: macos
            CMD_BUILD: |
              poetry run pyinstaller --onefile config/build.spec
              zip -j ./dist/eir_macos.zip ./dist/eir
            OUT_FILE_NAME: eir_macos.zip
            ASSET_MIME: application/zip

          - os: windows-latest
            TARGET: windows
            CMD_BUILD: |
              poetry run pyinstaller --onefile config/build.spec
              Compress-Archive ./dist/eir.exe ./dist/eir_windows.zip
            OUT_FILE_NAME: eir_windows.zip
            ASSET_MIME: application/vnd.microsoft.portable-executable
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade setuptools
          pip install poetry==1.1.6
          poetry install
      - name: Build with pyinstaller for ${{matrix.TARGET}}
        run: ${{matrix.CMD_BUILD}}
      - name: Load Release URL File from release job
        uses: actions/download-artifact@v1
        with:
          name: release_url
      - name: Get Release File Name & Upload URL
        id: get_release_info
        shell: bash
        run: |
          value=`cat release_url/release_url.txt`
          echo ::set-output name=upload_url::$value
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: ./dist/${{ matrix.OUT_FILE_NAME}}
          asset_name: ${{ matrix.OUT_FILE_NAME}}
          asset_content_type: ${{ matrix.ASSET_MIME}}

  upload:
    name: Upload to PyPI
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
          architecture: x64
      - run: pip install tox==3.20.1
      - run: pip install poetry==1.1.6
      - run: tox -e py38
      - run: poetry build
      - run: poetry publish --username=__token__ --password=${{ secrets.PYPI_TOKEN }}
